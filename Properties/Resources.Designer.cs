//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuestMaker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuestMaker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to void main()
        ///{
        ///	int XP = GetLocalInt(OBJECT_SELF, &quot;XP&quot;);
        ///	object oPC = GetFirstPC(TRUE);
        ///	if (XP != 0) {
        ///		GiveXPToCreature(oPC, XP);
        ///	}
        ///	
        ///	string journalEntry = &quot;Q_&quot; + GetLocalString(OBJECT_SELF, &quot;JournalUpdate&quot;);	
        ///	int id = GetLocalInt(OBJECT_SELF, &quot;nextState&quot;);
        ///	AddJournalQuestEntry(journalEntry, id, oPC, TRUE, FALSE, FALSE); 
        ///}.
        /// </summary>
        internal static string ga_advance_journal {
            get {
                return ResourceManager.GetString("ga_advance_journal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Talking script
        ///#include &quot;ginc_debug&quot;
        ///	
        ///void main()
        ///{
        ///	object oUser = GetClickingObject();
        ///	if(!GetIsDead(oUser))
        ///	{
        ///		ActionStartConversation(oUser);
        ///	}
        ///}.
        /// </summary>
        internal static string ga_door_talk {
            get {
                return ResourceManager.GetString("ga_door_talk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;ginc_var_ops&quot;
        ///
        ///void main()
        ///{
        ///	object oPC = GetEnteringObject();
        ///	int isPC = GetIsPC(oPC) || GetIsOwnedByPlayer(oPC);
        ///	if (!isPC) {
        ///		return;
        ///	}
        ///	
        ///	string compare1 = GetLocalString(OBJECT_SELF, &quot;condition&quot;);
        ///	
        ///	int value = GetLocalInt(OBJECT_SELF, &quot;nextState&quot;);
        ///	string compare2 = &quot;&lt;&quot; + IntToString(value);
        ///
        ///	string message = GetLocalString(OBJECT_SELF, &quot;message&quot;);
        ///
        ///	int negate = GetLocalInt(OBJECT_SELF, &quot;negate&quot;);
        ///		
        ///	string questTag = GetLocalString(OBJECT_SELF, &quot;JournalUpdate&quot;); [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string gtr_conditional_run_script {
            get {
                return ResourceManager.GetString("gtr_conditional_run_script", resourceCulture);
            }
        }
    }
}
